parameters:
  - name: TargetEnv
    type: string
  - name: ContainerRegistry
    type: string
    default: anansiacrdev
  - name: DockerRegistry
    type: string
    default: anansiacrdev.azurecr.io

jobs:
  - template: /deployment/pipelines/build-image.yml
    parameters:
      DockerRepository: anansi-jupyterhub-singleuser
      DockerFile: .jupyterlab-singleuser/singleuser.Dockerfile
      Tag: base
      TargetEnv: ${{ parameters.TargetEnv }}
      TargetProject: jhub
      JobName: SingleUserBase
      ContainerRegistry: ${{ parameters.ContainerRegistry }}
      DockerRegistry: ${{ parameters.DockerRegistry }}
  - template: /deployment/pipelines/build-image.yml
    parameters:
      DockerRepository: anansi-jupyterhub-singleuser
      DockerFile: .jupyterlab-singleuser/singleuser.Dockerfile
      Tag: dev
      CustomArg: --build-arg MODE=dev
      TargetEnv: ${{ parameters.TargetEnv }}
      TargetProject: jhub
      JobName: SingleUserDev
      ContainerRegistry: ${{ parameters.ContainerRegistry }}
      DockerRegistry: ${{ parameters.DockerRegistry }}
#   - template: /deployment/pipelines/build-image.yml
#     parameters:
#       DockerRepository: web-frontend
#       DockerFile: deployment/images/web-frontend/web-frontend.Dockerfile
#       Tag: web-frontend
#       TargetEnv: ${{ parameters.TargetEnv }}
#       TargetProject: web
#       JobName: WebFrontend
#       ContainerRegistry: ${{ parameters.ContainerRegistry }}
#       DockerRegistry: ${{ parameters.DockerRegistry }}
#   - template: /deployment/pipelines/build-image.yml
#     parameters:
#       DockerRepository: web-backend
#       DockerFile: deployment/images/web-backend/django/django.Dockerfile
#       Tag: web-backend
#       TargetEnv: ${{ parameters.TargetEnv }}
#       TargetProject: web
#       JobName: WebBackend
#       ContainerRegistry: ${{ parameters.ContainerRegistry }}
#       DockerRegistry: ${{ parameters.DockerRegistry }}
#   - template: /deployment/pipelines/build-image.yml
#     parameters:
#       DockerRepository: web-websocket
#       DockerFile: deployment/images/web-backend/y-websocket/y-websocket.Dockerfile
#       Tag: web-websocket
#       TargetEnv: ${{ parameters.TargetEnv }}
#       TargetProject: web
#       JobName: WebWebsocket
#       ContainerRegistry: ${{ parameters.ContainerRegistry }}
#       DockerRegistry: ${{ parameters.DockerRegistry }}
 #- template: /deployment/pipelines/build-image.yml
 #  parameters:
 #    DockerRepository: anansi-docs
 #    DockerFile: deployment/images/anansi-docs/anansi-docs.Dockerfile
 #    Tag: anansi-docs
 #    CustomArg: --build-arg BASE_IMAGE=${{ parameters.DockerRegistry }}/anansi-base:latest
 #    TargetEnv: ${{ parameters.TargetEnv }}
 #    TargetProject: web
 #    JobName: AnansiDocs
 #    ContainerRegistry: ${{ parameters.ContainerRegistry }}
 #    DockerRegistry: ${{ parameters.DockerRegistry }}
